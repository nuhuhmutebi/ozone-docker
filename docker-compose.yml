services:

  # Apache HTTPD - Entry point for the application.
  proxy:
    build:
      context: proxy/
      args:
        TIMEZONE: "${TIMEZONE}"
    command: "httpd-foreground ${PROXY_TLS}"
    healthcheck:
      test:
        - CMD
        - curl
        - "-f"
        - "http://localhost/"
    networks:
      ozone:
        aliases:
          - ozone-proxy
          - proxy
    ports:
      - "${PROXY_PUBLIC_PORT}:80"
      - "${PROXY_PUBLIC_PORT_TLS}:443"
      - "8069:8069"
    volumes:
      - "./proxy/confs:/usr/local/apache2/conf/extra"
      - "${PROXY_TLS_CERTS_PATH:-proxy-tls-certs}:/etc/tls"
    depends_on:
      - frontend
      - openmrs


  # Bahmni Appointments
  appointments:
    image: mekomsolutions/appointments:latest
    healthcheck:
      test:
        - CMD
        - curl
        - "-f"
        - "http://localhost:8903/appointments/index.html"
      timeout: 20s
    networks:
      ozone:
        aliases:
          - appointments-1
  env-substitution:
    image:  mekomsolutions/env-substitution
    environment:
      - SENAITE_URL=http://senaite:8080
      - OPENMRS_URL=http://openmrs:8080
      - ODOO_URL=http://odoo:8069
      - ODOO_DATABASE=${ODOO_DATABASE}
      - ODOO_USER=${ODOO_USER}
      - ODOO_PASSWORD=${ODOO_PASSWORD}
      - OPENMRS_DB_HOST=${OPENMRS_DB_HOST}
      - OPENMRS_DB_PORT=${OPENMRS_DB_PORT}
      - OPENMRS_DB_NAME=${OPENMRS_DB_NAME}
      - OPENMRS_DB_USER=${OPENMRS_DB_USER}
      - OPENMRS_DB_PASSWORD=${OPENMRS_DB_PASSWORD}
      - OPENMRS_USER=${OPENMRS_USER}
      - SENAITE_USERNAME=admin
      - SENAITE_PASSWORD=admin
      - OPENMRS_PASSWORD=${OPENMRS_PASSWORD}
      - ANALYTICS_DB_NAME=${ANALYTICS_DB_NAME}
      - ANALYTICS_DB_USER=${ANALYTICS_DB_USER}
      - ANALYTICS_DB_PASSWORD=${ANALYTICS_DB_PASSWORD}
      - ANALYTICS_DB_HOST=${POSTGRES_DB_HOST}
      - CLIENTS=ozone,eip,senaite,superset,openmrs,odoo
      - MYSQL_ADMIN_USER=root
      - MYSQL_ADMIN_USER_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - EIP_DB_NAME=${EIP_DB_NAME}
      - EIP_DB_USER=${EIP_DB_USER}
      - EIP_DB_PASSWORD=${EIP_DB_PASSWORD}
    volumes:
       - "${DISTRO_PATH}:/opt/env-substitution/files"
    networks:
      ozone:
        aliases:
          - env-substitution
        

  # OpenMRS
  openmrs:
    image: mekomsolutions/openmrs:latest
    depends_on:
      mysql:
        condition: service_started
      env-substitution:
        condition: service_completed_successfully
    ports:
      - 8080:8080
    environment:
      MODULE_WEB_ADMIN: "true"
      DB_AUTO_UPDATE: "true"
      DB_CREATE_TABLES: "true"
      DB_HOST: ${OPENMRS_DB_HOST}
      DB_DATABASE: openmrs
      DB_USERNAME: ${OPENMRS_DB_USER}
      DB_PASSWORD: ${OPENMRS_DB_PASSWORD}
    healthcheck:
      test:
        - CMD
        - curl
        - "-f"
        - "http://localhost:8080/openmrs/"
      timeout: 5s
    networks:
      ozone:
        aliases:
          - openmrs
          - openmrs-tomcat
    volumes:
      - "openmrs-data:/usr/local/tomcat/.OpenMRS/"
      - "${OPENMRS_OWAS_PATH:-openmrs-owas}:/usr/local/tomcat/.OpenMRS/owa/"
      - "${OPENMRS_CORE_PATH}:/usr/local/tomcat/webapps"
      - "${OPENMRS_MODULES_PATH:-openmrs-modules}:/usr/local/tomcat/.OpenMRS/modules/"
      - "${OPENMRS_CONFIG_PATH:-openmrs-config}:/usr/local/tomcat/.OpenMRS/configuration/"
      - "${OPENMRS_CONFIG_CHECKSUMS_PATH:-openmrs-config-checksums}:/usr/local/tomcat/.OpenMRS/configuration_checksums/"
      - "${OZONE_CONFIG_PATH:-ozone-config}/openmrs-properties:/etc/properties/"

  # MySQL
  mysql:
    command: "mysqld --character-set-server=utf8 --collation-server=utf8_general_ci --log-bin --binlog-format=ROW  --server-id=2"
    environment:
      MYSQL_DATABASE: openmrs
      MYSQL_USER: ${OPENMRS_DB_USER}
      MYSQL_PASSWORD: ${OPENMRS_DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      EIP_DB_NAME: ${EIP_DB_NAME}
      EIP_DB_USER: ${EIP_DB_USER}
      EIP_DB_PASSWORD: ${EIP_DB_PASSWORD}
    healthcheck:
      test: "exit 0"
    image: mariadb:10.2
    networks:
      ozone:
        aliases:
          - openmrs-mysql
    volumes:
      - "${MYSQL_DATADIR:-mysql-data}:/var/lib/mysql"
      - "${SQL_SCRIPTS_PATH:-./sqls}/mysql:/docker-entrypoint-initdb.d"
    ports:
      - "3306:3306"
    
  # Postgreql - Database shared by multiple services.
  postgresql:
    image: postgres:13
    command: postgres -c wal_level=logical -c max_wal_senders=10 -c max_replication_slots=10
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      # Analystics
      ANALYTICS_DB_NAME: ${ANALYTICS_DB_NAME}
      ANALYTICS_DB_USER: ${ANALYTICS_DB_USER}
      ANALYTICS_DB_PASSWORD: ${ANALYTICS_DB_PASSWORD}
      # Odoo DB vars
      ODOO_DB_NAME: odoo
      ODOO_DB_USER: ${ODOO_DB_USER}
      ODOO_DB_PASSWORD: ${ODOO_DB_PASSWORD}
      SUPERSET_DB: ${SUPERSET_DB}
      SUPERSET_DB_USER: ${SUPERSET_DB_USER}
      SUPERSET_DB_PASSWORD: ${SUPERSET_DB_PASSWORD}
    networks:
      ozone:
        aliases:
          - odoo-postgresql
          - odoo-14
    volumes:
      - ${POSTGRES_DATADIR:-postgresql-data}:/var/lib/postgresql/data
      - "${SQL_SCRIPTS_PATH:-./sqls}/postgresql:/docker-entrypoint-initdb.d"
    ports:
      - "5432:5432"
    

  # Odoo - The ERP component of Ozone.
  odoo:
    depends_on:
      postgresql:
        condition: service_healthy
    image: mekomsolutions/odoo
    environment:
      - HOST=${POSTGRES_DB_HOST}
      - USER=${ODOO_DB_USER}
      - PASSWORD=${ODOO_DB_PASSWORD}
      - ADDONS=sale_management,stock,account_account,purchase,mrp,odoo_initializer,ozone_settings
      - INITIALIZER_DATA_FILES_PATH=/mnt/odoo_csv
      - INITIALIZER_CONFIG_FILE_PATH=/mnt/initializer_config/initializer_config.json
    networks:
      ozone:
        aliases:
          - odoo-14
    volumes:
      - "${ODOO_FILESTORE:-odoo-filestore}:/var/lib/odoo/filestore"
      - "${ODOO_EXTRA_ADDONS:-odoo-extra-addons}:/mnt/extra-addons"
      - "${ODOO_CONFIG_PATH:-odoo-config}:/mnt/odoo_csv"
      - "${ODOO_CONFIG_FILE_PATH:-odoo-config}:/mnt/initializer_config/initializer_config.json"
      - odoo-checksums:/mnt/odoo_csv_checksum

  # OpenMRS 3 Microfrontends
  frontend:
    image: openmrs/openmrs-reference-application-3-frontend:${TAG:-nightly}
    environment:
      SPA_PATH: /openmrs/spa
      API_URL: /openmrs
      SPA_CONFIG_URLS:
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      timeout: 5s
    # volumes:
    #   - "${SPA_PATH:-microfrontends}:/usr/share/nginx/html/"
    networks:
      ozone:
        aliases:
          - frontend
  senaite:
    environment: 
      - SITE=${SITE}
      - ADMIN_USER=${ADMIN_USER}
      - ADMIN_PASSWORD=${ADMIN_USER}
    image: mekomsolutions/senaite:latest
    volumes:
    - ${SENAITE_CONFIG_PATH}/data:/data/importdata/senaite
    - senaite-filestorage:/data/filestorage
    - senaite-blobstorage:/data/blobstorage
    ports:
    - "8081:8080"
    networks:
      ozone:
        aliases:
          - senaite
    depends_on: 
      env-substitution:
        condition: service_completed_successfully
  eip_client: 
    image: mekomsolutions/eip-client
    volumes:
      - "${EIP_PATH:-eipapp}/config:/config"
      - "${EIP_PATH:-eipapp}/routes:/routes"
      - eip-home:/eip-home
    networks:
      ozone:
        aliases:
          - eip_client
    depends_on: 
      env-substitution:
        condition: service_completed_successfully
      openmrs:
        condition: service_started
      odoo:
        condition: service_started
      senaite:
        condition: service_started
      
    ports:
    - "8083:8083"

    
version: "3.7"
volumes:
  proxy-tls-certs: ~
  openmrs-data: ~
  mysql-data: ~
  openmrs-config: ~
  openmrs-config-checksums: ~
  openmrs-modules: ~
  openmrs-owas: ~
  ozone-config: ~
  ozone-obscalculator: ~
  ozone-apps: ~
  ozone-home: ~
  postgresql-data: ~
  odoo-extra-addons: ~
  odoo-web-data: ~
  odoo-config: ~
  odoo-filestore: ~
  ozone-reports-data: ~
  senaite-data: ~
  eip-home: ~
  redis: ~
  senaite-filestorage: ~
  senaite-blobstorage: ~
  odoo-checksums: ~
networks:
  ozone:
